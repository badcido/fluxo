<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="Avaliação de bens"> 
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - Avaliação de bens">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('7:1,1877:1')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('197:1338')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Secretaria"/>
        <transition to="Expedir mandado de avaliação" name="Expedir mandado de avaliação"/>
    </start-state>  
    <!-- NODES -->
    <process-state name="Expedir mandado de avaliação">
        <sub-process name="Preparar ato de cartório" binding="late"/>
        <transition to="Encaminhar mandados de avaliação" name="Encaminhar mandados de avaliação"/>
    </process-state>
    <node name="Encaminhar mandados de avaliação">
        <transition to="Aguardar avaliação" name="Aguardar avaliação"/>
    </node>
    <task-node end-tasks="true" name="Aguardar avaliação">
        <task name="Aguardar avaliação" swimlane="Secretaria">
            <controller>
                <variable name="MovimentarLote" mapped-name="movimentarLote:MovimentarLote" access="read,write"/>
            </controller>
        </task>
        <transition to="Avaliar resultado da avaliação" name="Avaliar resultado da avaliação"/>
        <transition to="Nó de Desvio - Avaliação de bens" name="Nó de Desvio - Avaliação de bens">
            <condition expression="#{true}"/>
        </transition>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:ef:aguardaavaliacao', true)}"/>
        </event>
        <event type="task-end">
            <action expression="#{tramitacaoProcessualService.apagaVariavelTarefa('pje:fluxo:ef:aguardaavaliacao')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="Avaliar resultado da avaliação">
        <task name="Avaliar resultado da avaliação" swimlane="Secretaria">
            <controller>
                <variable name="MovimentarLote" mapped-name="movimentarLote:MovimentarLote" access="read,write"/>
            </controller>
        </task>
        <transition to="Comunicar sobre a avaliação" name="Comunicar sobre a avaliação"/>
        <transition to="Término" name="Avaliação frustrada"/>
        <transition to="Nó de Desvio - Avaliação de bens" name="Nó de Desvio - Avaliação de bens">
            <condition expression="#{true}"/>
        </transition>
    </task-node>
    <process-state name="Comunicar sobre a avaliação">
        <sub-process name="Fluxo de bloqueio de ativos do devedor" binding="late"/>
        <transition to="Término" name="Término"/>
    </process-state>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - Avaliação de bens">
        <task name="Nó de Desvio - Avaliação de bens" swimlane="Nó de Desvio - Avaliação de bens"/>
        <transition to="Aguardar avaliação" name="Aguardar avaliação"/>
        <transition to="Avaliar resultado da avaliação" name="Avaliar resultado da avaliação"/>
        <transition to="Término" name="Término"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
