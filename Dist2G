<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="FluxoDistribuição2Grau">
    <description><![CDATA[Fluxo de analise de Prevenção, Classificação e Distribuição dos processos]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Distribuição">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('49:5850')}"/>
    </swimlane>
    <swimlane name="Classificação">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('48:5851')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Classificação"/>
        <description><![CDATA[]]></description>
        <transition to="Análise Distribuição" name="Análise Distribuição"/>
    </start-state>  
    <!-- NODES -->
    <task-node end-tasks="true" name="Distribuir">
        <task name="Distribuir" swimlane="Distribuição">
            <controller>
                <variable name="Processo_distribuirProcessante" mapped-name="frame:Processo_distribuirProcessante" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[]]></description>
        <transition to="Término" name="Término">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Retificar Autuação" name="Retificar Autuação"/>
        <transition to="Nó de Desvio - FluxoDistribuição2Grau" name="Nó de Desvio - FluxoDistribuição2Grau">
            <condition expression="#{true}"/>
        </transition>
    </task-node>
    <task-node end-tasks="true" name="Redistribuir">
        <task name="Redistribuir" swimlane="Distribuição">
            <controller>
                <variable name="Processo_Fluxo_abaRedistribuicaoProcesso" mapped-name="frame:Processo_Fluxo_abaRedistribuicaoProcesso" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[]]></description>
        <transition to="Término" name="Término"/>
        <transition to="Retificar Autuação" name="Retificar Autuação"/>
        <transition to="Nó de Desvio - FluxoDistribuição2Grau" name="Nó de Desvio - FluxoDistribuição2Grau">
            <condition expression="#{true}"/>
        </transition>
    </task-node>
    <task-node end-tasks="true" name="Retificar Autuação">
        <task name="Retificar Autuação" swimlane="Classificação">
            <controller>
                <variable name="Processo_RetificacaoAutuacao_updateRetificacaoAutuacao" mapped-name="page:Processo_RetificacaoAutuacao_updateRetificacaoAutuacao" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[]]></description>
        <transition to="Término" name="Término">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Verificar Prevenção" name="Verificar Prevenção"/>
        <transition to="Nó de Desvio - FluxoDistribuição2Grau" name="Nó de Desvio - FluxoDistribuição2Grau">
            <condition expression="#{true}"/>
        </transition>
    </task-node>
    <task-node end-tasks="true" name="Verificar Prevenção">
        <task name="Verificar Prevenção" swimlane="Classificação">
            <controller>
                <variable name="Certidao" mapped-name="textEditSignature:Certidao" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[]]></description>
        <transition to="Redistribuir" name="Encaminhar p/ Redistribuir">
            <condition expression="#{processoTrfHome.possuiOrgaoJulgador()}"/>
        </transition>
        <transition to="Distribuir" name="Encaminhar p/ Distribuir">
            <condition expression="#{!processoTrfHome.possuiOrgaoJulgador()}"/>
        </transition>
        <transition to="Nó de Desvio - FluxoDistribuição2Grau" name="Nó de Desvio - FluxoDistribuição2Grau">
            <condition expression="#{true}"/>
        </transition>
        <event type="node-enter">
            <action name="upd" expression="#{modeloDocumento.set('Certidao',73)}"/>
            <action name="upd" expression="#{org.jboss.seam.bpm.processInstance.contextInstance.setVariable('tiposDisponiveisIds', '57')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="Análise Distribuição">
        <task name="Análise Distribuição" swimlane="Classificação">
            <controller/>
        </task>
        <description><![CDATA[]]></description>
        <transition to="Verificar Prevenção" name="Verificar Prevenção"/>
        <transition to="Retificar Autuação" name="Retificar Autuação"/>
        <transition to="Nó de Desvio - FluxoDistribuição2Grau" name="Nó de Desvio - FluxoDistribuição2Grau">
            <condition expression="#{true}"/>
        </transition>
    </task-node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - FluxoDistribuição2Grau">
        <task name="Nó de Desvio - FluxoDistribuição2Grau"/>
        <transition to="Distribuir" name="Distribuir"/>
        <transition to="Redistribuir" name="Redistribuir"/>
        <transition to="Retificar Autuação" name="Retificar Autuação"/>
        <transition to="Verificar Prevenção" name="Verificar Prevenção"/>
        <transition to="Análise Distribuição" name="Análise Distribuição"/>
        <transition to="Término" name="Término"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS --> 
</process-definition>
