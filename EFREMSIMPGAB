<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="Efetivação Remessa para outro Gabinete">
    <description><![CDATA[asgdawa]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Setor do cumprimento">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('8:5903')}"/>
    </swimlane>
    <swimlane name="Conselheiro">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('4:1469,7:1469')}"/>
    </swimlane>
    <swimlane name="Assessoria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('6:5197,4:1469,7:1469')}"/>
    </swimlane>
    <swimlane name="Nó de Desvio - Efetivação Remessa para outro Gabinete">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('8:1,8:5904')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial"/>
        <transition to="Minutar ato - não relator" name="Minutar ato - não relator"/>
    </start-state>  
    <!-- NODES -->
    <task-node end-tasks="true" name="Minutar ato - não relator">
        <task name="Minutar ato - não relator" swimlane="Assessoria">
            <controller>
                <variable name="minuta_ato_naorelator" mapped-name="textEditCombo:minuta_ato_naorelator" access="read,write"/>
            </controller>
        </task>
        <transition to="Confirmar ato - não relator" name="Encaminhar para assinatura"/>
        <transition to="Nó de Desvio - Efetivação Remessa para outro Gabinete" name="Nó de Desvio - Efetivação Remessa para outro Gabinete">
            <condition expression="#{true}"/>
        </transition>
        <event type="node-enter">
            <action name="upd" expression="#{modeloDocumento.set('minuta_despacho',12,13,11,17,215,231,232)}"/>
        </event>
        <event type="task-create">
            <action expression="#{tramitacaoProcessualService.gravaVariavel('pje:fluxo:confirmaPrevencao', false)}"/>
            <action expression="#{preencherMovimento.deCodigo(51).comComplementoDeCodigo(3).doTipoDominio().preencherComElementoDeCodigo(5).lancarMovimento()}"/>
        </event>
        <event type="task-end">
            <action name="upd" expression="#{not empty processoHome.idProcessoDocumento and processoHome.idProcessoDocumento &gt; 0 ? tramitacaoProcessualService.gravaVariavel('minutaEmElaboracao', processoHome.idProcessoDocumento) : tramitacaoProcessualService.gravaVariavel('minutaEmElaboracao', tramitacaoProcessualService.recuperaVariavelTarefa('textEditCombo:minuta_ato_naorelator'))}"/>
        </event>
        <event type="task-start">
            <action name="Condicao do lancamento temporario de movimentos" expression="#{lancadorMovimentosService.setCondicaoLancamentoMovimentosTemporarioNoFluxo('#{true}')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:documento:tipo:minuta:ids','64')}"/>
        </event>
    </task-node>
    <task-node end-tasks="true" name="Confirmar ato - não relator">
        <task name="Confirmar ato - não relator" swimlane="Conselheiro">
            <controller>
                <variable name="Processo_Fluxo_revisarMinuta" mapped-name="frame:Processo_Fluxo_revisarMinuta" access="read,write"/>
            </controller>
        </task>
        <description><![CDATA[Para habilitar a assinatura em lote, favor mudar a transição para o Término. Caso isso não aconteceça, o pje não permitirá a assinatura em lote.]]></description>
        <transition to="Minutar ato - não relator" name="Devolver para retificação"/>
        <transition to="Nó de Desvio - Efetivação Remessa para outro Gabinete" name="Nó de Desvio - Efetivação Remessa para outro Gabinete">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Término" name="Término">
            <condition expression="#{true}"/>
        </transition>
        <event type="node-enter">
            <action name="upd" expression="#{modeloDocumento.set('Processo_Fluxo_revisarMinuta',12,13,11,17,215,231,232)}"/>
        </event>
        <event type="task-create">
            <action expression="#{taskInstanceUtil.setFrameDefaultTransition('Término')}"/>
        </event>
        <event type="task-end">
            <action expression="#{not empty processoHome.idProcessoDocumento and processoHome.idProcessoDocumento &gt; 0 ? tramitacaoProcessualService.gravaVariavel('minutaEmElaboracao', processoHome.idProcessoDocumento) : tramitacaoProcessualService.gravaVariavel('minutaEmElaboracao', tramitacaoProcessualService.recuperaVariavelTarefa('textEditCombo:minuta_ato_naorelator'))}"/>
        </event>
        <event type="task-start">
            <action name="upd" expression="#{lancadorMovimentosService.setCondicaoLancamentoMovimentosTemporarioNoFluxo('#{false}')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.gravaVariavelTarefa('pje:fluxo:documento:tipo:minuta:ids','64')}"/>
        </event>
    </task-node>
    <end-state name="Término">
        <event type="task-end">
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('orgaoJulgadorColegiado')}"/>
            <action/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('pje:fluxo:deslocamento:orgaoDestino')}"/>
            <action name="upd" expression="#{tramitacaoProcessualService.apagaVariavel('pje:fluxo:deslocamento:colegiadoDestino')}"/>
        </event>
    </end-state>
    <task-node end-tasks="true" name="Nó de Desvio - Efetivação Remessa para outro Gabinete">
        <task name="Nó de Desvio - Efetivação Remessa para outro Gabinete" swimlane="Nó de Desvio - Efetivação Remessa para outro Gabinete"/>
        <transition to="Minutar ato - não relator" name="Minutar ato - não relator"/>
        <transition to="Confirmar ato - não relator" name="Confirmar ato - não relator"/>
        <transition to="Término" name="Término"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>  
    <!-- ACTIONS --> 
</process-definition>
