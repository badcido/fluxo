<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="Fluxo de Recursos aos Tribunais Superiores"> 
    <!-- SWIMLANES -->
    <swimlane name="Nó de Desvio - Fluxo de Recursos aos Tribunais Superiores">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('8:1,8:5904')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('8:5904,8:5903,8:5902,8:5900')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial"/>
        <transition to="Deslocar Processo 1ª Vice-Presidência" name="Deslocar Processo 1ª Vice-Presidência"/>
    </start-state>  
    <!-- NODES -->
    <node name="Deslocar Processo 1ª Vice-Presidência">
        <transition to="Cumprimento de Decisão pré Admissibilidade" name="Cumprimento de Decisão pré Admissibilidade"/>
        <event type="node-enter">
            <action expression="#{processoJudicialService.deslocarProcessoParaLocalizacaoDeJuiz(tramitacaoProcessualService.recuperaProcesso(), usuarioLocalizacaoMagistradoServidorManager.getMagistradoPorCargo(orgaoJulgadorCargoManager.getOrgaoJulgadorCargoEmExercicio(orgaoJulgadorService.findById(parametroUtil.getParametro('tjpr:orgaoGabinete1aVicePresidencia:id')))))}"/>
        </event>
    </node>
    <process-state name="Cumprimento de Decisão pré Admissibilidade">
        <sub-process name="Cumprimento de decisão segundo grau" binding="late"/>
        <transition to="Término" name="Término"/>
        <transition to="Processo Encerrado" name="Processo Encerrado"/>
    </process-state>
    <task-node end-tasks="true" name="Processo Encerrado">
        <task name="Processo Encerrado" swimlane="Secretaria"/>
        <transition to="Cumprimento de Decisão pré Admissibilidade" name="Cumprimento de Decisão pré Admissibilidade"/>
        <transition to="Término" name="Término">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Nó de Desvio - Fluxo de Recursos aos Tribunais Superiores" name="Nó de Desvio - Fluxo de Recursos aos Tribunais Superiores">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Nó de Desvio - Fluxo de Recursos aos Tribunais Superiores" name="Nó de Desvio - Fluxo de Recursos aos Tribunais Superiores">
            <condition expression="#{true}"/>
        </transition>
    </task-node>
    <end-state name="Término"/>
    <task-node end-tasks="true" name="Nó de Desvio - Fluxo de Recursos aos Tribunais Superiores">
        <task name="Nó de Desvio - Fluxo de Recursos aos Tribunais Superiores" swimlane="Nó de Desvio - Fluxo de Recursos aos Tribunais Superiores"/>
        <transition to="Processo Encerrado" name="Processo Encerrado"/>
        <transition to="Término" name="Término"/>
    </task-node>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
