<?xml version="1.0" encoding="ISO-8859-1"?>

<process-definition xmlns="urn:jbpm.org:jpdl-3.2" name="Fluxo principal segundo grau">
    <description><![CDATA[abs]]></description>  
    <!-- SWIMLANES -->
    <swimlane name="Assessoria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('5:1469,5:5197,6:5197,4:1469')}"/>
    </swimlane>
    <swimlane name="Nó de Desvio - Fluxo principal segundo grau">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('8:1,8:5904')}"/>
    </swimlane>
    <swimlane name="Secretaria">
        <assignment pooled-actors="#{localizacaoAssignment.getPooledActors('8:5904,8:5903,8:5902,8:5900,8:5031')}"/>
    </swimlane>  
    <!-- START-STATE -->
    <start-state name="Início">
        <task name="Tarefa inicial" swimlane="Secretaria"/>
        <transition to="Verificar Composição e Revisão" name="Verificar Composição e Revisão"/>
    </start-state>  
    <!-- NODES -->
    <decision expression="#{(processoTrfHome.instance.classeJudicial.exigeRevisor.facultativo or processoTrfHome.instance.classeJudicial.composicaoJulgamento.facultativo)? 'Definir Revisão e Composição' : 'Verificar urgencia' }" name="Verificar Composição e Revisão">
        <transition to="Definir Revisão e Composição" name="Definir Revisão e Composição"/>
        <transition to="Verificar urgencia" name="Verificar urgencia"/>
    </decision>
    <task-node end-tasks="true" name="Definir Revisão e Composição">
        <task name="Definir Revisão e Composição" swimlane="Secretaria">
            <controller>
                <variable name="Processo_Fluxo_definirRevisor" mapped-name="frame:Processo_Fluxo_definirRevisor" access="read,write"/>
                <variable name="Processo_Fluxo_definirComposicaoJulgamento" mapped-name="frame:Processo_Fluxo_definirComposicaoJulgamento" access="read,write"/>
            </controller>
        </task>
        <transition to="Verificar urgencia" name="Envio ao Relator"/>
        <transition to="Nó de Desvio - Fluxo principal segundo grau" name="Nó de Desvio - Fluxo principal segundo grau">
            <condition expression="#{true}"/>
        </transition>
    </task-node>
    <task-node end-tasks="true" name="Nó de Desvio - Fluxo principal segundo grau">
        <task name="Nó de Desvio - Fluxo principal segundo grau" swimlane="Nó de Desvio - Fluxo principal segundo grau"/>
        <transition to="Término" name="Término"/>
        <transition to="Processo encerrado" name="Processo encerrado"/>
        <transition to="Definir Revisão e Composição" name="Definir Revisão e Composição"/>
    </task-node>
    <decision expression="#{processoTrfHome.emPedidoUrgencia or processoTrfHome.instance.processoTrfConexaoList.size() &gt; 0?'Minutar ato inicial urgente':'Minutar ato inicial'}" name="Verificar urgencia">
        <transition to="Minutar ato inicial" name="Minutar ato inicial"/>
        <transition to="Minutar ato inicial urgente" name="Minutar ato inicial urgente"/>
    </decision>
    <process-state name="Minutar ato inicial">
        <sub-process name="Preparar ato judicial de 2º Grau" binding="late"/>
        <transition to="Cumprimento de decisao inicio" name="Análise do Cartório"/>
    </process-state>
    <process-state name="Minutar ato inicial urgente">
        <sub-process name="Preparar ato judicial de 2º Grau" binding="late"/>
        <transition to="Cumprimento de decisao inicio" name="Análise do Cartório"/>
    </process-state>
    <process-state name="Cumprimento de decisao inicio">
        <sub-process name="Cumprir decisão em 2º Grau" binding="late"/>
        <transition to="Relatório e sessão de julgamento" name="Relatório e sessão de julgamento"/>
    </process-state>
    <process-state name="Relatório e sessão de julgamento">
        <sub-process name="Fluxo de decisão colegiada em gabinete" binding="late"/>
        <transition to="Cumprimento de decisão" name="Cumprimento de decisão"/>
    </process-state>
    <process-state name="Cumprimento de decisão">
        <sub-process name="Cumprir decisão em 2º Grau" binding="late"/>
        <transition to="Término" name="Término">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Processo encerrado" name="Processo encerrado"/>
        <event type="node-enter">
            <action expression="#{taskInstanceUtil.setFrameDefaultTransition('Minutar ato (relator)')}"/>
        </event>
    </process-state>
    <task-node end-tasks="true" name="Processo encerrado">
        <task name="Processo encerrado" swimlane="Secretaria"/>
        <transition to="Cumprimento de decisão" name="Cumprimento de decisão"/>
        <transition to="Término" name="Término">
            <condition expression="#{true}"/>
        </transition>
        <transition to="Nó de Desvio - Fluxo principal segundo grau" name="Nó de Desvio - Fluxo principal segundo grau">
            <condition expression="#{true}"/>
        </transition>
    </task-node>
    <end-state name="Término"/>  
    <!-- PROCESS-EVENTS -->
    <event type="node-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="node-leave">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="before-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="superstate-enter">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="transition">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="process-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-end">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-start">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="subprocess-created">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="after-signal">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-assign">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="task-create">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event>
    <event type="timer">
        <script>br.com.infox.ibpm.util.JbpmEvents.raiseEvent(executionContext)</script>
    </event> 
</process-definition>
